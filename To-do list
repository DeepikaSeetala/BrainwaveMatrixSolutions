<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>To-Do List</title>
    <style>
        body {
            font-family: Cursive, sans-serif;
            background-color: #e8ccd7;
            background-image: url('C:\Users\deepi\OneDrive\Pictures\todo bg image.jpg./background.jpg');
            background-repeat: no-repeat;
            background-size: cover;
            background-position: center;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            color: #333;
        }

        .container {
            background-color: rgba(255, 255, 255, 0.9); /* Add transparency to the container background */
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            width: 400px;
            text-align: center;
        }

        .header {
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 20px;
        }

        .logo {
            width: 40px; /* Adjust the size as needed */
            height: 40px;
            margin-right: 10px;
        }

        h1 {
            margin: 0;
        }

        input[type="text"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            margin-bottom: 10px;
            font-size: 16px;
        }

        .buttons {
            display: flex;
            justify-content: space-between;
            margin-bottom: 20px;
        }

        .buttons button {
            padding: 10px 15px;
            border: none;
            background-color: #007bff;
            color: white;
            border-radius: 5px;
            cursor: pointer;
        }

        .buttons button:hover {
            background-color: #0056b3;
        }

        .tabs {
            display: flex;
            justify-content: space-around;
            margin-bottom: 10px;
        }

        .tabs button {
            background: none;
            border: none;
            font-size: 16px;
            cursor: pointer;
            padding: 10px;
            color: #007bff;
        }

        .tabs button:hover {
            text-decoration: underline;
        }

        .tabs .active {
            font-weight: bold;
            text-decoration: underline;
        }

        .task-list {
            list-style-type: none;
            padding: 0;
        }

        .task-list li {
            background-color: #f9f9f9;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            margin-bottom: 5px;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .task-list li.completed {
            text-decoration: line-through;
            color: #888;
        }

        .task-list li input[type="checkbox"] {
            margin-right: 10px;
        }

        .message {
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <img src="C:\Users\deepi\OneDrive\Pictures\todo list logo.png" alt="To-Do List Logo" class="logo">
            <h1>To-Do List</h1>
        </div>
        <input type="text" id="taskInput" placeholder="Add a New Task + Enter" onkeypress="if(event.key === 'Enter') addTask()">
        <div class="buttons">
            <div class="tabs">
                <button class="active" onclick="filterTasks('all')">All</button>
                <button onclick="filterTasks('pending')">Pending</button>
                <button onclick="filterTasks('completed')">Completed</button>
            </div>
            <button onclick="clearAll()">Clear All</button>
        </div>
        <ul id="taskList" class="task-list"></ul>
        <div class="message" id="completionMessage"></div>
    </div>
    <script>
        let tasks = [];

        function addTask() {
            const taskInput = document.getElementById('taskInput');
            if (taskInput.value.trim() === '') {
                alert('Please enter a task');
                return;
            }

            const task = {
                id: Date.now(),
                text: taskInput.value,
                completed: false
            };
            tasks.push(task);
            taskInput.value = '';
            renderTasks();
        }

        function toggleTaskCompletion(taskId) {
            const task = tasks.find(task => task.id === taskId);
            task.completed = !task.completed;
            renderTasks();
        }

        function clearAll() {
            tasks = [];
            renderTasks();
        }

        function filterTasks(filter) {
            const allTabs = document.querySelectorAll('.tabs button');
            allTabs.forEach(tab => tab.classList.remove('active'));

            if (filter === 'all') {
                document.querySelector('.tabs button:nth-child(1)').classList.add('active');
            } else if (filter === 'pending') {
                document.querySelector('.tabs button:nth-child(2)').classList.add('active');
            } else {
                document.querySelector('.tabs button:nth-child(3)').classList.add('active');
            }

            renderTasks(filter);
        }

        function renderTasks(filter = 'all') {
            const taskList = document.getElementById('taskList');
            taskList.innerHTML = '';

            const filteredTasks = tasks.filter(task => {
                if (filter === 'all') return true;
                if (filter === 'pending') return !task.completed;
                if (filter === 'completed') return task.completed;
            });

            let completedCount = 0;
            filteredTasks.forEach(task => {
                const li = document.createElement('li');
                li.className = task.completed ? 'completed' : '';

                const checkbox = document.createElement('input');
                checkbox.type = 'checkbox';
                checkbox.checked = task.completed;
                checkbox.onclick = () => toggleTaskCompletion(task.id);

                li.appendChild(checkbox);
                li.appendChild(document.createTextNode(task.text));

                taskList.appendChild(li);

                if (task.completed) {
                    completedCount++;
                }
            });

            const pendingCount = filteredTasks.length - completedCount;

            updateCompletionMessage(completedCount, pendingCount);
        }

        function updateCompletionMessage(completedCount, pendingCount) {
            const messageDiv = document.getElementById('completionMessage');
            messageDiv.innerHTML = '';

            if (completedCount === tasks.length && tasks.length > 0) {
                messageDiv.textContent = `GOOD! You have completed today's list.`;
            } else {
                messageDiv.textContent = `You have left with ${pendingCount} task(s). Try to complete all.`;
            }
        }
    </script>
</body>
</html>
